// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in = true, sel = address[9..11], a=toR0, b=toR1, c=toR2, d=toR3, e=toR4, f=toR5, g=toR6, h=toR7);

    And( a = load, b = toR0, out = loadTo0);
    And( a = load, b = toR1, out = loadTo1);
    And( a = load, b = toR2, out = loadTo2);
    And( a = load, b = toR3, out = loadTo3);
    And( a = load, b = toR4, out = loadTo4);
    And( a = load, b = toR5, out = loadTo5);
    And( a = load, b = toR6, out = loadTo6);
    And( a = load, b = toR7, out = loadTo7);

    RAM512(in = in, address = address[0..8], load = loadTo0, out = postLoad0);
    RAM512(in = in, address = address[0..8], load = loadTo1, out = postLoad1);
    RAM512(in = in, address = address[0..8], load = loadTo2, out = postLoad2);
    RAM512(in = in, address = address[0..8], load = loadTo3, out = postLoad3);
    RAM512(in = in, address = address[0..8], load = loadTo4, out = postLoad4);
    RAM512(in = in, address = address[0..8], load = loadTo5, out = postLoad5);
    RAM512(in = in, address = address[0..8], load = loadTo6, out = postLoad6);
    RAM512(in = in, address = address[0..8], load = loadTo7, out = postLoad7);

    Mux8Way16(a=postLoad0,
    b=postLoad1,
    c=postLoad2,
    d=postLoad3,
    e=postLoad4,
    f=postLoad5,
    g=postLoad6,
    h=postLoad7,
    sel=address[9..11],
    out=out);
}
